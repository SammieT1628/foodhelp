{"ast":null,"code":"var _jsxFileName = \"/Users/samanthathompson/Bingus/foodhelp/Frontend/src/Components/MainArea/ListGroup.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ListGroup() {\n  const name = 'Samantha Thompson';\n  const username = 'tsammie16';\n  const email = 'tsammie16@gmail.com';\n  const phoneNum = '(636)357-9633';\n  const names = ['New York', 'San Francisco', 'Tokyo', 'London', 'Paris'];\n  //if items = [];\n  /*if (names.length === 0) {\n      return (\n          <>\n          <p>No names found</p>\n          </>\n      )\n  }*/\n  //const message = names.length === 0 ? <p>No names to be found</p> : null\n  //benefit of using a function in this case is that our functions can take parameters\n  const getMessage = () => {\n    return names.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No names to be found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 59\n    }, this) : 1;\n  };\n  //Event handler\n  ///const handleClick = (event: MouseEvent) => console.log(event)\n  const handleClick = event => console.log(name, event.currentTarget);\n  //when calling handlClick in the jsx we dont call it like this handleCLick() we \n  //just want to put a reference to the function. It will run during runtime\n\n  let selectedIndex = -1;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Name: \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Username: \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Email: \", email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), getMessage()\n      /* we can also do {names.length === 0 && <p>No names to be found</p>}*/, /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Phone Number: \", phoneNum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), names.map((name, index) =>\n      /*#__PURE__*/\n      //normally when we get data from api we would have name.id for the key\n      _jsxDEV(\"li\", {\n        className: selectedIndex === index ? 'bg-blue-600' : 'bg-blue-400',\n        onClick: handleClick,\n        children: name\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = ListGroup;\nexport default ListGroup;\nvar _c;\n$RefreshReg$(_c, \"ListGroup\");","map":{"version":3,"names":["ListGroup","name","username","email","phoneNum","names","getMessage","length","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","handleClick","event","console","log","currentTarget","selectedIndex","_Fragment","map","index","className","onClick","_c","$RefreshReg$"],"sources":["/Users/samanthathompson/Bingus/foodhelp/Frontend/src/Components/MainArea/ListGroup.tsx"],"sourcesContent":["import { MouseEvent } from \"react\";\n\n\nfunction ListGroup() {\n    const name = 'Samantha Thompson';\n    const username = 'tsammie16';\n    const email = 'tsammie16@gmail.com';\n    const phoneNum = '(636)357-9633'\n\n    const names = [\n        'New York',\n        'San Francisco',\n        'Tokyo',\n        'London',\n        'Paris'\n    ];\n    //if items = [];\n    /*if (names.length === 0) {\n        return (\n            <>\n            <p>No names found</p>\n            </>\n        )\n    }*/\n    //const message = names.length === 0 ? <p>No names to be found</p> : null\n    //benefit of using a function in this case is that our functions can take parameters\n    const getMessage = () => {return names.length === 0 ? <p>No names to be found</p> : 1}\n    //Event handler\n    ///const handleClick = (event: MouseEvent) => console.log(event)\n    const handleClick = (event: MouseEvent) => console.log(name, event.currentTarget)\n    //when calling handlClick in the jsx we dont call it like this handleCLick() we \n    //just want to put a reference to the function. It will run during runtime\n\n    let selectedIndex = -1\n    return (\n    <>\n        <ul>\n            <li>Name: {name}</li>\n            <li>Username: {username}</li>\n            <li>Email: {email}</li>\n            {getMessage()\n            /* we can also do {names.length === 0 && <p>No names to be found</p>}*/}\n            \n            <li>Phone Number: {phoneNum}</li>\n            {names.map((name, index) => (\n                //normally when we get data from api we would have name.id for the key\n                <li\n                className={selectedIndex === index ? 'bg-blue-600' : 'bg-blue-400'}\n                key={name}\n                onClick={handleClick}>{name}</li>\n            ))}\n        </ul>\n    </>\n    )\n}\n\nexport default ListGroup;"],"mappings":";;;AAGA,SAASA,SAASA,CAAA,EAAG;EACjB,MAAMC,IAAI,GAAG,mBAAmB;EAChC,MAAMC,QAAQ,GAAG,WAAW;EAC5B,MAAMC,KAAK,GAAG,qBAAqB;EACnC,MAAMC,QAAQ,GAAG,eAAe;EAEhC,MAAMC,KAAK,GAAG,CACV,UAAU,EACV,eAAe,EACf,OAAO,EACP,QAAQ,EACR,OAAO,CACV;EACD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IAAC,OAAOD,KAAK,CAACE,MAAM,KAAK,CAAC,gBAAGC,OAAA;MAAAC,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAAG,CAAC;EAAA,CAAC;EACtF;EACA;EACA,MAAMC,WAAW,GAAIC,KAAiB,IAAKC,OAAO,CAACC,GAAG,CAAChB,IAAI,EAAEc,KAAK,CAACG,aAAa,CAAC;EACjF;EACA;;EAEA,IAAIC,aAAa,GAAG,CAAC,CAAC;EACtB,oBACAX,OAAA,CAAAY,SAAA;IAAAX,QAAA,eACID,OAAA;MAAAC,QAAA,gBACID,OAAA;QAAAC,QAAA,GAAI,QAAM,EAACR,IAAI;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBL,OAAA;QAAAC,QAAA,GAAI,YAAU,EAACP,QAAQ;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7BL,OAAA;QAAAC,QAAA,GAAI,SAAO,EAACN,KAAK;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACtBP,UAAU,CAAC;MACZ,sFAEAE,OAAA;QAAAC,QAAA,GAAI,gBAAc,EAACL,QAAQ;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAChCR,KAAK,CAACgB,GAAG,CAAC,CAACpB,IAAI,EAAEqB,KAAK;MAAA;MACnB;MACAd,OAAA;QACAe,SAAS,EAAEJ,aAAa,KAAKG,KAAK,GAAG,aAAa,GAAG,aAAc;QAEnEE,OAAO,EAAEV,WAAY;QAAAL,QAAA,EAAER;MAAI,GADtBA,IAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACuB,CACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBACP,CAAC;AAEP;AAACY,EAAA,GAnDQzB,SAAS;AAqDlB,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}